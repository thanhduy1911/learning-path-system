spring:
  application:
    name: user-service
  profiles:
    active: dev
    group:
      dev:
        - dev
        - local
      prod:
        - prod
        - cloud
  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      idle-timeout: 300000
  cloud:
    config:
      enabled: false
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration
    schemas: public
    validate-on-migrate: true
    clean-disabled: false
  jackson:
    time-zone: Asia/Ho_Chi_Minh
    date-format: yyyy-MM-dd HH:mm:ss
  cache:
    type: redis
    redis:
      time-to-live: 3600000
      cache-null-values: false
      key-prefix: "user-service:"
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${AUTH_SERVER_URL}
          jwk-set-uri: ${AUTH_SERVER_URL}/.well-known/jwks.json
  task:
    execution:
      pool:
        core-size: 8
        max-size: 16
        queue-capacity: 100
  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    port: ${RABBITMQ_PORT:5672}
  sleuth:
    sampler:
      probability: 1.0
    zipkin:
      base-url: ${ZIPKIN_URL}
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}

server:
  port: 8081
  error:
    include-message: always
    include-binding-errors: always
    include-stacktrace: never
  servlet:
    session:
      cookie:
        secure: true
        http-only: true

logging:
  level:
    root: INFO
    com.learningpathsystem: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/user-service.log
  logback:
    rollingpolicy:
      max-file-size: 10MB
      max-history: 30

springdoc:
  api-docs:
    path: /api-docs
    version: openapi_3_0
  swagger-ui:
    path: /swagger-ui.html
    operationsSorter: method
    tagsSorter: alpha

jwt:
  secret: ${JWT_SECRET:your-256-bit-secret-key-here-must-be-at-least-32-characters}
  expiration: ${JWT_EXPIRATION:86400000}

eureka:
  client:
    serviceUrl:
      defaultZone: ${EUREKA_URL:http://localhost:8761/eureka/}
  instance:
    prefer-ip-address: true

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always
  metrics:
    tags:
      application: ${spring.application.name}
  tracing:
    sampling:
      probability: 1.0
  health:
    db:
      enabled: true
    redis:
      enabled: true
    rabbit:
      enabled: true
  prometheus:
    metrics:
      export:
        enabled: true

resilience4j:
  circuitbreaker:
    instances:
      userService:
        slidingWindowSize: 10
        failureRateThreshold: 50
        waitDurationInOpenState: 10000
        permittedNumberOfCallsInHalfOpenState: 3
  retry:
    instances:
      userService:
        maxAttempts: 3
        waitDuration: 1000
  ratelimiter:
    instances:
      userService:
        limitForPeriod: 100
        limitRefreshPeriod: 1s
feature:
  flags:
    enable-new-user-registration: ${FEATURE_ENABLE_NEW_USER_REGISTRATION:true}
    enable-email-verification: ${FEATURE_ENABLE_EMAIL_VERIFICATION:true}
    enable-2fa: ${FEATURE_ENABLE_2FA:false}
    enable-social-login: ${FEATURE_ENABLE_SOCIAL_LOGIN:true}
    maintenance-mode: ${FEATURE_MAINTENANCE_MODE:false}
    beta-features: ${FEATURE_BETA_FEATURES:false}